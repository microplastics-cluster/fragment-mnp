Traceback (most recent call last):
  File "/home/runner/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/runner/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/runner/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/runner/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from fragmentmnp import FragmentMNP
from fragmentmnp.examples import minimal_config, minimal_data

# Change the dissolution parameters
minimal_config['n_timesteps'] = 10
minimal_data['k_diss'] = {
    'average': 0.0005,
    'alpha_s': 2
}
# minimal_config['k_diss_scaling_method'] = 'surface_area'

# Rerun the model
fmnp = FragmentMNP(minimal_config, minimal_data)
output = fmnp.run()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mSchemaError[0m                               Traceback (most recent call last)
File [0;32m~/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/schema.py:443[0m, in [0;36mSchema.validate[0;34m(self, data, **kwargs)[0m
[1;32m    442[0m [38;5;28;01mtry[39;00m:
[0;32m--> 443[0m     [38;5;28;01mreturn[39;00m [43ms[49m[38;5;241;43m.[39;49m[43mvalidate[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    444[0m [38;5;28;01mexcept[39;00m SchemaError [38;5;28;01mas[39;00m x:

File [0;32m~/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/schema.py:167[0m, in [0;36mOr.validate[0;34m(self, data, **kwargs)[0m
[1;32m    166[0m         errors [38;5;241m+[39m[38;5;241m=[39m _x[38;5;241m.[39merrors
[0;32m--> 167[0m [38;5;28;01mraise[39;00m SchemaError(
[1;32m    168[0m     [[38;5;124m"[39m[38;5;132;01m%r[39;00m[38;5;124m did not validate [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m [38;5;241m%[39m ([38;5;28mself[39m, data)] [38;5;241m+[39m autos,
[1;32m    169[0m     [[38;5;28mself[39m[38;5;241m.[39m_error[38;5;241m.[39mformat(data) [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_error [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m] [38;5;241m+[39m errors,
[1;32m    170[0m )

[0;31mSchemaError[0m: Or(Or(And(<class 'int'>, <function <lambda> at 0x7f917d992790>), And(<class 'float'>, <function <lambda> at 0x7f917d992820>)), {'k_f': And(Or(<class 'int'>, <class 'float'>), <function <lambda> at 0x7f917d9928b0>), Optional('k_0'): Or(<class 'int'>, <class 'float'>), Optional('is_compound'): <class 'bool'>, Optional('alpha_t'): Or(<class 'int'>, <class 'float'>), Optional('B_t'): Or(<class 'int'>, <class 'float'>), Optional('beta_t'): Or(<class 'int'>, <class 'float'>), Optional('gamma_t'): Or(<class 'int'>, <class 'float'>), Optional('delta1_t'): Or(<class 'int'>, <class 'float'>), Optional('alpha_s'): Or(<class 'int'>, <class 'float'>), Optional('B_s'): Or(<class 'int'>, <class 'float'>), Optional('beta_s'): Or(<class 'int'>, <class 'float'>), Optional('gamma_s'): Or(<class 'int'>, <class 'float'>), Optional('delta1_s'): Or(<class 'int'>, <class 'float'>), Optional('C_t'): Or(<class 'int'>, <class 'float'>, None), Optional('D_t'): Or(<class 'int'>, <class 'float'>, None), Optional('delta2_t'): Or(<class 'int'>, <class 'float'>, None), Optional('C_s'): Or(<class 'int'>, <class 'float'>, None), Optional('D_s'): Or(<class 'int'>, <class 'float'>, None), Optional('delta2_s'): Or(<class 'int'>, <class 'float'>, None), Optional('A_t'): Or(<class 'int'>, <class 'float'>, <function _is_array at 0x7f917d992550>), Optional('A_s'): Or(<class 'int'>, <class 'float'>, <function _is_array at 0x7f917d992550>)}) did not validate {'average': 0.0005, 'alpha_s': 2}
Or(And(<class 'int'>, <function <lambda> at 0x7f917d992790>), And(<class 'float'>, <function <lambda> at 0x7f917d992820>)) did not validate {'average': 0.0005, 'alpha_s': 2}
{'average': 0.0005, 'alpha_s': 2} should be instance of 'int'
{'average': 0.0005, 'alpha_s': 2} should be instance of 'float'
Missing key: 'k_f'

During handling of the above exception, another exception occurred:

[0;31mSchemaError[0m                               Traceback (most recent call last)
File [0;32m~/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/schema.py:405[0m, in [0;36mSchema.validate[0;34m(self, data, **kwargs)[0m
[1;32m    404[0m [38;5;28;01mtry[39;00m:
[0;32m--> 405[0m     nvalue [38;5;241m=[39m [43mSchema[49m[43m([49m[43msvalue[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43me[49m[43m,[49m[43m [49m[43mignore_extra_keys[49m[38;5;241;43m=[39;49m[43mi[49m[43m)[49m[38;5;241;43m.[39;49m[43mvalidate[49m[43m([49m[43mvalue[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    406[0m [38;5;28;01mexcept[39;00m SchemaError [38;5;28;01mas[39;00m x:

File [0;32m~/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/schema.py:445[0m, in [0;36mSchema.validate[0;34m(self, data, **kwargs)[0m
[1;32m    444[0m [38;5;28;01mexcept[39;00m SchemaError [38;5;28;01mas[39;00m x:
[0;32m--> 445[0m     [38;5;28;01mraise[39;00m SchemaError([[38;5;28;01mNone[39;00m] [38;5;241m+[39m x[38;5;241m.[39mautos, [e[38;5;241m.[39mformat(data) [38;5;28;01mif[39;00m e [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m] [38;5;241m+[39m x[38;5;241m.[39merrors)
[1;32m    446[0m [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m x:

[0;31mSchemaError[0m: Or(Or(And(<class 'int'>, <function <lambda> at 0x7f917d992790>), And(<class 'float'>, <function <lambda> at 0x7f917d992820>)), {'k_f': And(Or(<class 'int'>, <class 'float'>), <function <lambda> at 0x7f917d9928b0>), Optional('k_0'): Or(<class 'int'>, <class 'float'>), Optional('is_compound'): <class 'bool'>, Optional('alpha_t'): Or(<class 'int'>, <class 'float'>), Optional('B_t'): Or(<class 'int'>, <class 'float'>), Optional('beta_t'): Or(<class 'int'>, <class 'float'>), Optional('gamma_t'): Or(<class 'int'>, <class 'float'>), Optional('delta1_t'): Or(<class 'int'>, <class 'float'>), Optional('alpha_s'): Or(<class 'int'>, <class 'float'>), Optional('B_s'): Or(<class 'int'>, <class 'float'>), Optional('beta_s'): Or(<class 'int'>, <class 'float'>), Optional('gamma_s'): Or(<class 'int'>, <class 'float'>), Optional('delta1_s'): Or(<class 'int'>, <class 'float'>), Optional('C_t'): Or(<class 'int'>, <class 'float'>, None), Optional('D_t'): Or(<class 'int'>, <class 'float'>, None), Optional('delta2_t'): Or(<class 'int'>, <class 'float'>, None), Optional('C_s'): Or(<class 'int'>, <class 'float'>, None), Optional('D_s'): Or(<class 'int'>, <class 'float'>, None), Optional('delta2_s'): Or(<class 'int'>, <class 'float'>, None), Optional('A_t'): Or(<class 'int'>, <class 'float'>, <function _is_array at 0x7f917d992550>), Optional('A_s'): Or(<class 'int'>, <class 'float'>, <function _is_array at 0x7f917d992550>)}) did not validate {'average': 0.0005, 'alpha_s': 2}
Or(And(<class 'int'>, <function <lambda> at 0x7f917d992790>), And(<class 'float'>, <function <lambda> at 0x7f917d992820>)) did not validate {'average': 0.0005, 'alpha_s': 2}
{'average': 0.0005, 'alpha_s': 2} should be instance of 'int'
{'average': 0.0005, 'alpha_s': 2} should be instance of 'float'
Missing key: 'k_f'

During handling of the above exception, another exception occurred:

[0;31mSchemaError[0m                               Traceback (most recent call last)
File [0;32m~/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/schema.py:443[0m, in [0;36mSchema.validate[0;34m(self, data, **kwargs)[0m
[1;32m    442[0m [38;5;28;01mtry[39;00m:
[0;32m--> 443[0m     [38;5;28;01mreturn[39;00m [43ms[49m[38;5;241;43m.[39;49m[43mvalidate[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    444[0m [38;5;28;01mexcept[39;00m SchemaError [38;5;28;01mas[39;00m x:

File [0;32m~/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/schema.py:409[0m, in [0;36mSchema.validate[0;34m(self, data, **kwargs)[0m
[1;32m    408[0m     message [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_prepend_schema_name(k)
[0;32m--> 409[0m     [38;5;28;01mraise[39;00m SchemaError([message] [38;5;241m+[39m x[38;5;241m.[39mautos, [e[38;5;241m.[39mformat(data) [38;5;28;01mif[39;00m e [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m] [38;5;241m+[39m x[38;5;241m.[39merrors)
[1;32m    410[0m [38;5;28;01melse[39;00m:

[0;31mSchemaError[0m: Key 'k_diss' error:
Or(Or(And(<class 'int'>, <function <lambda> at 0x7f917d992790>), And(<class 'float'>, <function <lambda> at 0x7f917d992820>)), {'k_f': And(Or(<class 'int'>, <class 'float'>), <function <lambda> at 0x7f917d9928b0>), Optional('k_0'): Or(<class 'int'>, <class 'float'>), Optional('is_compound'): <class 'bool'>, Optional('alpha_t'): Or(<class 'int'>, <class 'float'>), Optional('B_t'): Or(<class 'int'>, <class 'float'>), Optional('beta_t'): Or(<class 'int'>, <class 'float'>), Optional('gamma_t'): Or(<class 'int'>, <class 'float'>), Optional('delta1_t'): Or(<class 'int'>, <class 'float'>), Optional('alpha_s'): Or(<class 'int'>, <class 'float'>), Optional('B_s'): Or(<class 'int'>, <class 'float'>), Optional('beta_s'): Or(<class 'int'>, <class 'float'>), Optional('gamma_s'): Or(<class 'int'>, <class 'float'>), Optional('delta1_s'): Or(<class 'int'>, <class 'float'>), Optional('C_t'): Or(<class 'int'>, <class 'float'>, None), Optional('D_t'): Or(<class 'int'>, <class 'float'>, None), Optional('delta2_t'): Or(<class 'int'>, <class 'float'>, None), Optional('C_s'): Or(<class 'int'>, <class 'float'>, None), Optional('D_s'): Or(<class 'int'>, <class 'float'>, None), Optional('delta2_s'): Or(<class 'int'>, <class 'float'>, None), Optional('A_t'): Or(<class 'int'>, <class 'float'>, <function _is_array at 0x7f917d992550>), Optional('A_s'): Or(<class 'int'>, <class 'float'>, <function _is_array at 0x7f917d992550>)}) did not validate {'average': 0.0005, 'alpha_s': 2}
Or(And(<class 'int'>, <function <lambda> at 0x7f917d992790>), And(<class 'float'>, <function <lambda> at 0x7f917d992820>)) did not validate {'average': 0.0005, 'alpha_s': 2}
{'average': 0.0005, 'alpha_s': 2} should be instance of 'int'
{'average': 0.0005, 'alpha_s': 2} should be instance of 'float'
Missing key: 'k_f'

During handling of the above exception, another exception occurred:

[0;31mSchemaError[0m                               Traceback (most recent call last)
File [0;32m~/work/fragment-mnp/fragment-mnp/src/fragmentmnp/fragmentmnp.py:542[0m, in [0;36mFragmentMNP._validate_inputs[0;34m(config, data)[0m
[1;32m    540[0m [38;5;28;01mtry[39;00m:
[1;32m    541[0m     [38;5;66;03m# Returns the data dict with defaults filled[39;00m
[0;32m--> 542[0m     data [38;5;241m=[39m [43mvalidation[49m[38;5;241;43m.[39;49m[43mvalidate_data[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mconfig[49m[43m)[49m
[1;32m    543[0m [38;5;28;01mexcept[39;00m SchemaError [38;5;28;01mas[39;00m err:

File [0;32m~/work/fragment-mnp/fragment-mnp/src/fragmentmnp/validation.py:161[0m, in [0;36mvalidate_data[0;34m(data, config)[0m
[1;32m    159[0m [38;5;66;03m# Run the validation, and return the validated dict[39;00m
[1;32m    160[0m [38;5;66;03m# if it passes[39;00m
[0;32m--> 161[0m validated [38;5;241m=[39m [43mSchema[49m[43m([49m[43mdata_schema[49m[43m)[49m[38;5;241;43m.[39;49m[43mvalidate[49m[43m([49m[43mdata[49m[43m)[49m
[1;32m    163[0m [38;5;66;03m# Check initial conc distribution is the correct length[39;00m

File [0;32m~/work/fragment-mnp/fragment-mnp/.venv/lib/python3.9/site-packages/schema.py:445[0m, in [0;36mSchema.validate[0;34m(self, data, **kwargs)[0m
[1;32m    444[0m [38;5;28;01mexcept[39;00m SchemaError [38;5;28;01mas[39;00m x:
[0;32m--> 445[0m     [38;5;28;01mraise[39;00m SchemaError([[38;5;28;01mNone[39;00m] [38;5;241m+[39m x[38;5;241m.[39mautos, [e[38;5;241m.[39mformat(data) [38;5;28;01mif[39;00m e [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m] [38;5;241m+[39m x[38;5;241m.[39merrors)
[1;32m    446[0m [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m x:

[0;31mSchemaError[0m: Key 'k_diss' error:
Or(Or(And(<class 'int'>, <function <lambda> at 0x7f917d992790>), And(<class 'float'>, <function <lambda> at 0x7f917d992820>)), {'k_f': And(Or(<class 'int'>, <class 'float'>), <function <lambda> at 0x7f917d9928b0>), Optional('k_0'): Or(<class 'int'>, <class 'float'>), Optional('is_compound'): <class 'bool'>, Optional('alpha_t'): Or(<class 'int'>, <class 'float'>), Optional('B_t'): Or(<class 'int'>, <class 'float'>), Optional('beta_t'): Or(<class 'int'>, <class 'float'>), Optional('gamma_t'): Or(<class 'int'>, <class 'float'>), Optional('delta1_t'): Or(<class 'int'>, <class 'float'>), Optional('alpha_s'): Or(<class 'int'>, <class 'float'>), Optional('B_s'): Or(<class 'int'>, <class 'float'>), Optional('beta_s'): Or(<class 'int'>, <class 'float'>), Optional('gamma_s'): Or(<class 'int'>, <class 'float'>), Optional('delta1_s'): Or(<class 'int'>, <class 'float'>), Optional('C_t'): Or(<class 'int'>, <class 'float'>, None), Optional('D_t'): Or(<class 'int'>, <class 'float'>, None), Optional('delta2_t'): Or(<class 'int'>, <class 'float'>, None), Optional('C_s'): Or(<class 'int'>, <class 'float'>, None), Optional('D_s'): Or(<class 'int'>, <class 'float'>, None), Optional('delta2_s'): Or(<class 'int'>, <class 'float'>, None), Optional('A_t'): Or(<class 'int'>, <class 'float'>, <function _is_array at 0x7f917d992550>), Optional('A_s'): Or(<class 'int'>, <class 'float'>, <function _is_array at 0x7f917d992550>)}) did not validate {'average': 0.0005, 'alpha_s': 2}
Or(And(<class 'int'>, <function <lambda> at 0x7f917d992790>), And(<class 'float'>, <function <lambda> at 0x7f917d992820>)) did not validate {'average': 0.0005, 'alpha_s': 2}
{'average': 0.0005, 'alpha_s': 2} should be instance of 'int'
{'average': 0.0005, 'alpha_s': 2} should be instance of 'float'
Missing key: 'k_f'

The above exception was the direct cause of the following exception:

[0;31mSchemaError[0m                               Traceback (most recent call last)
Cell [0;32mIn[4], line 13[0m
[1;32m      6[0m minimal_data[[38;5;124m'[39m[38;5;124mk_diss[39m[38;5;124m'[39m] [38;5;241m=[39m {
[1;32m      7[0m     [38;5;124m'[39m[38;5;124maverage[39m[38;5;124m'[39m: [38;5;241m0.0005[39m,
[1;32m      8[0m     [38;5;124m'[39m[38;5;124malpha_s[39m[38;5;124m'[39m: [38;5;241m2[39m
[1;32m      9[0m }
[1;32m     10[0m [38;5;66;03m# minimal_config['k_diss_scaling_method'] = 'surface_area'[39;00m
[1;32m     11[0m 
[1;32m     12[0m [38;5;66;03m# Rerun the model[39;00m
[0;32m---> 13[0m fmnp [38;5;241m=[39m [43mFragmentMNP[49m[43m([49m[43mminimal_config[49m[43m,[49m[43m [49m[43mminimal_data[49m[43m)[49m
[1;32m     14[0m output [38;5;241m=[39m fmnp[38;5;241m.[39mrun()

File [0;32m~/work/fragment-mnp/fragment-mnp/src/fragmentmnp/fragmentmnp.py:37[0m, in [0;36mFragmentMNP.__init__[0;34m(self, config, data, validate)[0m
[1;32m     35[0m [38;5;66;03m# Validate the config and data (if we are meant to)[39;00m
[1;32m     36[0m [38;5;28;01mif[39;00m validate:
[0;32m---> 37[0m     config, data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_inputs[49m[43m([49m[43mconfig[49m[43m,[49m[43m [49m[43mdata[49m[43m)[49m
[1;32m     38[0m [38;5;66;03m# If we passed validation (or aren't validating), save attributes[39;00m
[1;32m     39[0m [38;5;28mself[39m[38;5;241m.[39mconfig [38;5;241m=[39m config

File [0;32m~/work/fragment-mnp/fragment-mnp/src/fragmentmnp/fragmentmnp.py:544[0m, in [0;36mFragmentMNP._validate_inputs[0;34m(config, data)[0m
[1;32m    542[0m     data [38;5;241m=[39m validation[38;5;241m.[39mvalidate_data(data, config)
[1;32m    543[0m [38;5;28;01mexcept[39;00m SchemaError [38;5;28;01mas[39;00m err:
[0;32m--> 544[0m     [38;5;28;01mraise[39;00m SchemaError([38;5;124m'[39m[38;5;124mInput data did not pass validation![39m[38;5;124m'[39m) [38;5;28;01mfrom[39;00m [38;5;21;01merr[39;00m
[1;32m    545[0m [38;5;66;03m# Return the config and data with filled defaults[39;00m
[1;32m    546[0m [38;5;28;01mreturn[39;00m config, data

[0;31mSchemaError[0m: Input data did not pass validation!
SchemaError: Input data did not pass validation!

