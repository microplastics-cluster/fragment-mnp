name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    name: CI
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Check-out repository
      uses: actions/checkout@v4

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Test with pytest
      run: poetry run pytest

    - name: Build package
      run: poetry build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: fragmentmnp
        path: dist/

  cd:
    name: CD
    runs-on: ubuntu-latest
    # Only run this job if `ci` passes
    needs: ci

    # Only run if a new tag is pushed
    if: startsWith(github.ref, 'refs/tags/')

    environment:
      name: pypi
      url: https://pypi.org/p/fragmentmnp

    # Required for trusted publishing and GitHub release
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: fragmentmnp
        path: dist/
    # Publish to TestPyPI first
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        attestations: false
    # If that succeeds, publish to real PyPI
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
    # Sign the distribution so that we can create a release
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    # Create the release
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        "$GITHUB_REF_NAME"
        --repo "$GITHUB_REPOSITORY"
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"